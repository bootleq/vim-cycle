Describe Changer
  Before each
    new
  End

  After each
    bwipeout!
  End

  Context allows custom #change() function of changer
    Before all
      function! Foo(ctext, group, index) abort
        let ctext = extend(a:ctext, #{text: toupper(a:ctext.text) . string(a:index)})
        return ctext
      endfunction
    End

    It sets changer: 'change' in form of String
      call cycle#test#reset_default_groups([
            \   [['foo', 'bar'], #{changer: #{change: 'Foo'}}],
            \ ])

      call setline(1, 'foo')
      execute 'normal \a'
      Assert Equals(getline(1), 'FOO1')
    End

    It sets changer: 'change' in form of Funcref
      call cycle#test#reset_default_groups([
            \   [['foo', 'bar'], #{changer: #{change: function('Foo')}}],
            \ ])

      call setline(1, 'foo')
      execute 'normal \a'
      Assert Equals(getline(1), 'FOO1')
    End
  End
End
